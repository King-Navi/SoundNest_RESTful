{
  "swagger": "2.0",
  "info": {
    "title": "SoundNest API",
    "description": "Documentación de mi API RESTful",
    "version": "1.0.0"
  },
  "host": "localhost:6969",
  "basePath": "/",
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/api/auth/validateJWT": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "Validates a JWT and returns user information if the token is valid.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User data extracted from valid JWT.",
            "schema": {
              "type": "object",
              "properties": {
                "idUser": {
                  "type": "number",
                  "example": 2
                },
                "nameUser": {
                  "type": "string",
                  "example": "1"
                },
                "email": {
                  "type": "string",
                  "example": "zs22013698@estudiantes.uv.mx"
                },
                "idRole": {
                  "type": "number",
                  "example": 1
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid token",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "No token provided"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Forbidden - Access to the resource is prohibited",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid or expired token"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unexpected error while validating token"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint para login de usuario",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "123456"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/auth/sendCodeEmail": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Sends a confirmation code to the user\\'s email.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Code sent successfully"
          },
          "400": {
            "description": "Failed to send code"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/auth/verifiCode": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Verifies the confirmation code sent to the user\\'s email. Delete the code after",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "code": {
                  "type": "number",
                  "example": 123456
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Code verified successfully"
          },
          "400": {
            "description": "Invalid or expired code"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user/newUser": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Creates a new user. Deletes the code sent to the email after validation.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nameUser": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "Juan Pérez"
                    }
                  }
                },
                "email": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "juan@example.com"
                    }
                  }
                },
                "password": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "contraseña256"
                    }
                  }
                },
                "code": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "a1B2c3"
                    }
                  }
                },
                "additionalInformation": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "object"
                    },
                    "required": {
                      "type": "boolean",
                      "example": false
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "bio": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "example": {
                              "type": "string",
                              "example": "I love electronic music"
                            }
                          }
                        },
                        "instagram": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "example": {
                              "type": "string",
                              "example": "@juan_music"
                            }
                          }
                        },
                        "genres": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "array"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                }
                              }
                            },
                            "example": {
                              "type": "array",
                              "example": [
                                "rock",
                                "electronic"
                              ],
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "additionalProperties": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User created successfully (no content)"
          },
          "400": {
            "description": "Invalid or missing data"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/user/editUser": {
      "patch": {
        "tags": [
          "Users"
        ],
        "description": "Edit the authenticated user. All fields are optional; only provided fields will be updated.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nameUser": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "Juan Pérez"
                    }
                  }
                },
                "email": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "juan@example.com"
                    }
                  }
                },
                "additionalInformation": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "object"
                    },
                    "additionalProperties": {
                      "type": "boolean",
                      "example": true
                    },
                    "example": {
                      "type": "object",
                      "properties": {
                        "bio": {
                          "type": "string",
                          "example": "I love electronic music"
                        },
                        "instagram": {
                          "type": "string",
                          "example": "@juan_music"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Invalid or missing fields"
          },
          "401": {
            "description": "Unauthorized, no token provided"
          },
          "403": {
            "description": "Invalid or expired token"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/user/editUserPassword": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Change user password",
        "description": "Allows the authenticated user to update their password using a verification code sent to their email. The email must match the one in the JWT token.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token (JWT) for user authentication"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Verification code and new password to update the current password",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "a1B2c3"
                },
                "newPassword": {
                  "type": "string",
                  "example": "MyNewStrongPassword456"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Invalid code or validation error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid code"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing or invalid JWT",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "No token provided"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "The email in the token does not match the body email",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Email does not match token"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "User not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "428": {
            "description": "Precondition Required - the code has expired or was never sent",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Code expired or not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Server error while trying to update password",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Failed to update password"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/comment/:commentId/respondComment": {
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Responder a un comentario existente",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "ID del comentario al que se desea responder",
            "required": true,
            "type": "integer",
            "example": 5
          },
          {
            "name": "body",
            "in": "body",
            "description": "Contenido de la respuesta al comentario",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Estoy de acuerdo contigo"
                        }
                      }
                    }
                  }
                },
                "required": {
                  "type": "array",
                  "example": [
                    "message"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Respuesta agregada exitosamente al comentario"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Comentario no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/comment/createComment": {
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Crear un comentario",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Cuerpo del comentario",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "song_id": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "integer"
                        },
                        "example": {
                          "type": "number",
                          "example": 123
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "any"
                        }
                      }
                    }
                  }
                },
                "required": {
                  "type": "array",
                  "example": [
                    "song_id",
                    "message"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Comentario creado exitosamente"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Nonexistent song"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/comment/getComment/:song_id": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Obtener comentarios por ID de canción",
        "description": "",
        "parameters": [
          {
            "name": "song_id",
            "in": "path",
            "description": "ID de la canción (ej: 1231231)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de comentarios",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "681f473536ee5347ec38543c"
                  },
                  "song_id": {
                    "type": "number",
                    "example": 213
                  },
                  "user": {
                    "type": "string",
                    "example": "Pepe"
                  },
                  "message": {
                    "type": "string",
                    "example": "Prueba"
                  },
                  "parent_id": {},
                  "timestamp": {
                    "type": "string",
                    "example": "2025-05-10T12:31:49.254Z"
                  },
                  "responses": {
                    "type": "array",
                    "example": [],
                    "items": {}
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "No se encontraron comentarios"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/comment/getComment/comment/:id": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Obtener comentario por ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del comentario (ej: 681457a757562da3002c02d6)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalle del comentario",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "681f473536ee5347ec38543c"
                },
                "song_id": {
                  "type": "number",
                  "example": 213
                },
                "user": {
                  "type": "string",
                  "example": "Pepe"
                },
                "message": {
                  "type": "string",
                  "example": "Prueba"
                },
                "parent_id": {},
                "timestamp": {
                  "type": "string",
                  "example": "2025-05-10T12:31:49.254Z"
                },
                "responses": {
                  "type": "array",
                  "example": [],
                  "items": {}
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Comentario no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/comment/delete/:id": {
      "delete": {
        "tags": [
          "Comments"
        ],
        "summary": "Eliminar comentario por ID",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID del comentario (ej: 681457a757562da3002c02d6)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Comentario eliminado exitosamente"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Lack of permissions"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/notifications/createNotification": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Crear una notificación",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Cuerpo de la solicitud",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Title"
                        }
                      }
                    },
                    "sender": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "admin"
                        }
                      }
                    },
                    "user_id": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "integer"
                        },
                        "example": {
                          "type": "number",
                          "example": 101
                        }
                      }
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "john"
                        }
                      }
                    },
                    "notification": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Tienes un nuevo mensaje en tu bandeja de entrada."
                        }
                      }
                    },
                    "relevance": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "low",
                            "medium",
                            "high"
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "type": "string",
                          "example": "medium"
                        }
                      }
                    }
                  }
                },
                "required": {
                  "type": "array",
                  "example": [
                    "title",
                    "sender",
                    "user_id",
                    "user",
                    "notification",
                    "relevance"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      }
    },
    "/api/notifications/:id/notification": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Obtener notificación por ID",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID de la notificación (ej: 6814750fc209c9e3eb9bcd5b)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalle de la notificación",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "6821618d4f26dc92ccb426ff"
                },
                "title": {
                  "type": "string",
                  "example": "asdasd"
                },
                "sender": {
                  "type": "string",
                  "example": "fulanito23232"
                },
                "user_id": {
                  "type": "number",
                  "example": 1
                },
                "user": {
                  "type": "string",
                  "example": "u"
                },
                "notification": {
                  "type": "string",
                  "example": "high"
                },
                "relevance": {
                  "type": "string",
                  "example": "high"
                },
                "read": {
                  "type": "boolean",
                  "example": false
                },
                "createdAt": {
                  "type": "string",
                  "example": "2025-05-12T02:48:45.459Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Notificación no encontrada"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/notifications/getNotifications/:userId": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Obtener todas las notificaciones de un usuario",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID del usuario (ej: 101)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de notificaciones del usuario",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "6821618d4f26dc92ccb426ff"
                  },
                  "title": {
                    "type": "string",
                    "example": "asdasd"
                  },
                  "sender": {
                    "type": "string",
                    "example": "fulanito23232"
                  },
                  "user_id": {
                    "type": "number",
                    "example": 1
                  },
                  "user": {
                    "type": "string",
                    "example": "u"
                  },
                  "notification": {
                    "type": "string",
                    "example": "high"
                  },
                  "relevance": {
                    "type": "string",
                    "example": "high"
                  },
                  "read": {
                    "type": "boolean",
                    "example": false
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2025-05-12T02:48:45.459Z"
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/notifications/delete/:id": {
      "delete": {
        "tags": [
          "Notifications"
        ],
        "summary": "Eliminar notificación por ID",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID de la notificación (ej: 681471c0914598e2e39a7adb)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Notificación eliminada"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Notificación no encontrada"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/notifications/notification/:id/read": {
      "patch": {
        "tags": [
          "Notifications"
        ],
        "summary": "Marcar notificación como leída",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID de la notificación (ej: 6814750fc209c9e3eb9bcd5b)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Notificación marcada como leída"
          },
          "400": {
            "description": "Formato de ID inválido"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Notificación no encontrada"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/songs/:idsong/delete": {
      "delete": {
        "tags": [
          "Songs"
        ],
        "summary": "Delete a song",
        "description": "Deletes a song by its ID. Removes associated image and audio, then marks the record as deleted. Only the owner or an admin may perform this action.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "idsong",
            "description": "ID of the song whose image will be deleted",
            "required": true,
            "type": "integer",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/songs/:idsong/image": {
      "patch": {
        "tags": [
          "Songs"
        ],
        "summary": "Upload or update an image for a song",
        "description": "Allows a user to upload or replace the image associated with a song. Only the owner of the song or an admin can perform this action.",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "idsong",
            "in": "path",
            "description": "ID of the song whose image will be updated",
            "required": true,
            "type": "integer"
          },
          {
            "name": "imagefile",
            "in": "formData",
            "type": "file",
            "required": true,
            "description": "Image file to be uploaded. Must be PNG or JPEG.",
            "imagesTypes": [
              "image/png",
              "image/jpeg"
            ]
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Invalid file or missing required data",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "File not provided"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "User is not authorized to update this song image",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Acceso denegado"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Song not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Canción no encontrada"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error al actualizar imagen: <mensaje>"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/songs/user/:idAppUser/lastest": {
      "get": {
        "tags": [
          "Songs"
        ],
        "summary": "Lastest song",
        "description": "Returns the lastest song og the given user.",
        "parameters": [
          {
            "name": "idAppUser",
            "in": "path",
            "description": "ID of the user (AppUser) whose songs are to be retrieved",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "List of user songs returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "idSong": {
                  "type": "number",
                  "example": 1
                },
                "songName": {
                  "type": "string",
                  "example": "Canción de Prueba"
                },
                "fileName": {
                  "type": "string",
                  "example": "cancion_prueba.mp3"
                },
                "durationSeconds": {
                  "type": "number",
                  "example": 180
                },
                "releaseDate": {
                  "type": "string",
                  "example": "2025-05-14T00:15:46.000Z"
                },
                "isDeleted": {
                  "type": "boolean",
                  "example": false
                },
                "idSongGenre": {
                  "type": "number",
                  "example": 1
                },
                "idSongExtension": {
                  "type": "number",
                  "example": 1
                },
                "userName": {
                  "type": "string",
                  "example": "juanito"
                },
                "description": {
                  "type": "string",
                  "example": "Example of descriptions"
                },
                "pathImageUrl": {
                  "type": "string",
                  "example": "protocol://host/rute/file.extension"
                },
                "visualizations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "idVisualizations": {
                        "type": "number",
                        "example": 2
                      },
                      "playCount": {
                        "type": "number",
                        "example": 15
                      },
                      "period": {
                        "type": "string",
                        "example": "2025-05-12"
                      },
                      "idSong": {
                        "type": "number",
                        "example": 1
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid user ID"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/songs/user/:idAppUser": {
      "get": {
        "tags": [
          "Songs"
        ],
        "summary": "Get all songs created by a user",
        "description": "Returns a list of all songs uploaded by a given user.",
        "parameters": [
          {
            "name": "idAppUser",
            "in": "path",
            "description": "ID of the user (AppUser) whose songs are to be retrieved",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "List of user songs returned successfully.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "idSong": {
                    "type": "number",
                    "example": 1
                  },
                  "songName": {
                    "type": "string",
                    "example": "Canción de Prueba"
                  },
                  "fileName": {
                    "type": "string",
                    "example": "cancion_prueba.mp3"
                  },
                  "durationSeconds": {
                    "type": "number",
                    "example": 180
                  },
                  "releaseDate": {
                    "type": "string",
                    "example": "2025-05-14T00:15:46.000Z"
                  },
                  "isDeleted": {
                    "type": "boolean",
                    "example": false
                  },
                  "idSongGenre": {
                    "type": "number",
                    "example": 1
                  },
                  "idSongExtension": {
                    "type": "number",
                    "example": 1
                  },
                  "userName": {
                    "type": "string",
                    "example": "juanito"
                  },
                  "description": {
                    "type": "string",
                    "example": "Example of descriptions"
                  },
                  "pathImageUrl": {
                    "type": "string",
                    "example": "protocol://host/rute/file.extension"
                  },
                  "visualizations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "idVisualizations": {
                          "type": "number",
                          "example": 2
                        },
                        "playCount": {
                          "type": "number",
                          "example": 15
                        },
                        "period": {
                          "type": "string",
                          "example": "2025-05-12"
                        },
                        "idSong": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid user ID"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/songs/search": {
      "get": {
        "tags": [
          "Songs"
        ],
        "summary": "Get most popular songs with optional filters",
        "description": "Recovers the most popular songs. Se debe enviar al menos uno de los filtros: songName, artistName o idGenre.",
        "parameters": [
          {
            "name": "songName",
            "in": "query",
            "description": "Name of the song",
            "required": false,
            "type": "string"
          },
          {
            "name": "artistName",
            "in": "query",
            "description": "the name of the author of the song",
            "required": false,
            "type": "string"
          },
          {
            "name": "idGenre",
            "in": "query",
            "description": "idgenre of song",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "default": {
                  "type": "number",
                  "example": 10
                },
                "minimum": {
                  "type": "number",
                  "example": 1
                },
                "maximum": {
                  "type": "number",
                  "example": 60
                }
              }
            },
            "description": "Máximo número de canciones a devolver (default: 10)."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "integer"
                },
                "default": {
                  "type": "number",
                  "example": 0
                },
                "minimum": {
                  "type": "number",
                  "example": 0
                }
              }
            },
            "description": "Número de canciones a omitir (default: 0)."
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de canciones devuelta exitosamente.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "idSong": {
                    "type": "number",
                    "example": 1
                  },
                  "songName": {
                    "type": "string",
                    "example": "Canción de Prueba"
                  },
                  "fileName": {
                    "type": "string",
                    "example": "cancion_prueba.mp3"
                  },
                  "durationSeconds": {
                    "type": "number",
                    "example": 180
                  },
                  "releaseDate": {
                    "type": "string",
                    "example": "2025-05-14T00:15:46.000Z"
                  },
                  "isDeleted": {
                    "type": "boolean",
                    "example": false
                  },
                  "idSongGenre": {
                    "type": "number",
                    "example": 1
                  },
                  "idSongExtension": {
                    "type": "number",
                    "example": 1
                  },
                  "userName": {
                    "type": "string",
                    "example": "juanito"
                  },
                  "description": {
                    "type": "string",
                    "example": "Example of descriptions"
                  },
                  "pathImageUrl": {
                    "type": "string",
                    "example": "protocol://host/route/file.extension"
                  },
                  "visualizations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "idVisualizations": {
                          "type": "number",
                          "example": 2
                        },
                        "playCount": {
                          "type": "number",
                          "example": 15
                        },
                        "period": {
                          "type": "string",
                          "example": "2025-05-12"
                        },
                        "idSong": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Faltan todos los filtros obligatorios (se requiere al menos uno).",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Debes enviar al menos uno de estos parámetros en query: songName, artistName o idGenre."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Error interno del servidor.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Mensaje de error genérico."
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/songs/:amount/popular/:year/:month": {
      "get": {
        "tags": [
          "Songs"
        ],
        "summary": "Get most popular songs by month",
        "description": "Retrieves detailed information about the top songs in a given month and year, ordered by total playCount.",
        "parameters": [
          {
            "name": "amount",
            "in": "path",
            "description": "Number of songs to retrieve (max 60)",
            "required": true,
            "type": "integer"
          },
          {
            "name": "year",
            "in": "path",
            "description": "Four-digit year (e.g. 2025)",
            "required": true,
            "type": "integer"
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month number (1-12)",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "List of most popular songs returned successfully.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "idSong": {
                    "type": "number",
                    "example": 1
                  },
                  "songName": {
                    "type": "string",
                    "example": "Canción de Prueba"
                  },
                  "fileName": {
                    "type": "string",
                    "example": "cancion_prueba.mp3"
                  },
                  "durationSeconds": {
                    "type": "number",
                    "example": 180
                  },
                  "releaseDate": {
                    "type": "string",
                    "example": "2025-05-14T00:15:46.000Z"
                  },
                  "isDeleted": {
                    "type": "boolean",
                    "example": false
                  },
                  "idSongGenre": {
                    "type": "number",
                    "example": 1
                  },
                  "idSongExtension": {
                    "type": "number",
                    "example": 1
                  },
                  "userName": {
                    "type": "string",
                    "example": "juanito"
                  },
                  "description": {
                    "type": "string",
                    "example": "Example of descriptions"
                  },
                  "pathImageUrl": {
                    "type": "string",
                    "example": "protocol://host/route/file.extension"
                  },
                  "visualizations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "idVisualizations": {
                          "type": "number",
                          "example": 2
                        },
                        "playCount": {
                          "type": "number",
                          "example": 15
                        },
                        "period": {
                          "type": "string",
                          "example": "2025-05-12"
                        },
                        "idSong": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid or missing parameter",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid or missing 'amount'/'year'/'month' parameter"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "No popular songs found for the specified period",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Songs not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Failed to fetch popular songs: <message>"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/songs/:amount/recent": {
      "get": {
        "tags": [
          "Songs"
        ],
        "summary": "Get detailed information about recent songs (7 days ago max)",
        "description": "Retrieves detailed information about songs of 7 days old max, including metadata, artist name, and visualization history.",
        "parameters": [
          {
            "name": "amount",
            "in": "path",
            "description": "amount of the songs to retrieve",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Songs found and returned successfully.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "idSong": {
                    "type": "number",
                    "example": 1
                  },
                  "songName": {
                    "type": "string",
                    "example": "Canción de Prueba"
                  },
                  "fileName": {
                    "type": "string",
                    "example": "cancion_prueba.mp3"
                  },
                  "durationSeconds": {
                    "type": "number",
                    "example": 180
                  },
                  "releaseDate": {
                    "type": "string",
                    "example": "2025-05-14T00:15:46.000Z"
                  },
                  "isDeleted": {
                    "type": "boolean",
                    "example": false
                  },
                  "idSongGenre": {
                    "type": "number",
                    "example": 1
                  },
                  "idSongExtension": {
                    "type": "number",
                    "example": 1
                  },
                  "userName": {
                    "type": "string",
                    "example": "juanito"
                  },
                  "description": {
                    "type": "string",
                    "example": "Example of descriptions"
                  },
                  "pathImageUrl": {
                    "type": "string",
                    "example": "protocol://host/rute/file.extension"
                  },
                  "visualizations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "idVisualizations": {
                          "type": "number",
                          "example": 2
                        },
                        "playCount": {
                          "type": "number",
                          "example": 15
                        },
                        "period": {
                          "type": "string",
                          "example": "2025-05-12"
                        },
                        "idSong": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "error": "Invalid or missing amount"
          },
          "404": {
            "error": "Songs not found",
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/songs/:amount/random": {
      "get": {
        "tags": [
          "Songs"
        ],
        "summary": "Get detailed information about random songs",
        "description": "Retrieves detailed information for random songs, including metadata, artist name, and visualization history.",
        "parameters": [
          {
            "name": "amount",
            "in": "path",
            "description": "amount of the songs to retrieve",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Songs found and returned successfully.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "idSong": {
                    "type": "number",
                    "example": 1
                  },
                  "songName": {
                    "type": "string",
                    "example": "Canción de Prueba"
                  },
                  "fileName": {
                    "type": "string",
                    "example": "cancion_prueba.mp3"
                  },
                  "durationSeconds": {
                    "type": "number",
                    "example": 180
                  },
                  "releaseDate": {
                    "type": "string",
                    "example": "2025-05-14T00:15:46.000Z"
                  },
                  "isDeleted": {
                    "type": "boolean",
                    "example": false
                  },
                  "idSongGenre": {
                    "type": "number",
                    "example": 1
                  },
                  "idSongExtension": {
                    "type": "number",
                    "example": 1
                  },
                  "userName": {
                    "type": "string",
                    "example": "juanito"
                  },
                  "description": {
                    "type": "string",
                    "example": "Example of descriptions"
                  },
                  "pathImageUrl": {
                    "type": "string",
                    "example": "protocol://host/rute/file.extension"
                  },
                  "visualizations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "idVisualizations": {
                          "type": "number",
                          "example": 2
                        },
                        "playCount": {
                          "type": "number",
                          "example": 15
                        },
                        "period": {
                          "type": "string",
                          "example": "2025-05-12"
                        },
                        "idSong": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "error": "Invalid or missing amount"
          },
          "404": {
            "description": "Not Found",
            "error": "Songs not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/songs/:idsong/song": {
      "get": {
        "tags": [
          "Songs"
        ],
        "summary": "Get detailed information about a song",
        "description": "Retrieves detailed information for a specific song, including metadata, artist name, and visualization history.",
        "parameters": [
          {
            "name": "idsong",
            "in": "path",
            "description": "ID of the song to retrieve",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Song found and returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "idSong": {
                  "type": "number",
                  "example": 1
                },
                "songName": {
                  "type": "string",
                  "example": "Canción de Prueba"
                },
                "fileName": {
                  "type": "string",
                  "example": "cancion_prueba.mp3"
                },
                "durationSeconds": {
                  "type": "number",
                  "example": 180
                },
                "releaseDate": {
                  "type": "string",
                  "example": "2025-05-14T00:15:46.000Z"
                },
                "isDeleted": {
                  "type": "boolean",
                  "example": false
                },
                "idSongGenre": {
                  "type": "number",
                  "example": 1
                },
                "idSongExtension": {
                  "type": "number",
                  "example": 1
                },
                "userName": {
                  "type": "string",
                  "example": "juanito"
                },
                "description": {
                  "type": "string",
                  "example": "Example of descriptions"
                },
                "pathImageUrl": {
                  "type": "string",
                  "example": "protocol://host/rute/file.extension"
                },
                "visualizations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "idVisualizations": {
                        "type": "number",
                        "example": 2
                      },
                      "playCount": {
                        "type": "number",
                        "example": 15
                      },
                      "period": {
                        "type": "string",
                        "example": "2025-05-12"
                      },
                      "idSong": {
                        "type": "number",
                        "example": 1
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Song not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/songs/genres": {
      "get": {
        "tags": [
          "Songs"
        ],
        "description": "Retrieves all available music genres.",
        "responses": {
          "200": {
            "description": "List of music genres",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "idSongGenre": {
                    "type": "number",
                    "example": 4
                  },
                  "genreName": {
                    "type": "string",
                    "example": "Blues"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/songs/extensions": {
      "get": {
        "tags": [
          "Songs"
        ],
        "summary": "Get all song file extensions",
        "description": "Returns a list of available file extensions with their IDs.",
        "responses": {
          "200": {
            "description": "Successful response - list of extensions",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "idSongExtension": {
                    "type": "number",
                    "example": 2
                  },
                  "extensionName": {
                    "type": "string",
                    "example": "wav"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Server error while fetching extensions"
          }
        }
      }
    },
    "/api/playlist/{iduser}/user": {
      "get": {
        "tags": [
          "Playlists"
        ],
        "summary": "Get all playlists by user ID",
        "description": "Returns all playlists created by the specified user. Each playlist includes its metadata and the list of songs added.",
        "parameters": [
          {
            "name": "iduser",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Numeric ID of the user whose playlists will be fetched",
            "example": 2
          }
        ],
        "responses": {
          "200": {
            "description": "List of playlists successfully retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "playlists": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "6827f677c85a6289a67f363d"
                      },
                      "creator_id": {
                        "type": "number",
                        "example": 2
                      },
                      "playlist_name": {
                        "type": "string",
                        "example": "pruebas"
                      },
                      "description": {
                        "type": "string",
                        "example": "adaddadada"
                      },
                      "image_path": {
                        "type": "string",
                        "example": "bf7b7514-d1c0-45cf-9924-2fc6da45da50.png"
                      },
                      "songs": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "song_id": {
                              "type": "number",
                              "example": 1
                            },
                            "addedAt": {
                              "type": "string",
                              "example": "2025-05-17T02:43:20.530Z"
                            },
                            "_id": {
                              "type": "string",
                              "example": "6827f7c8923bf2c987721306"
                            }
                          }
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2025-05-17T02:37:43.622Z"
                      },
                      "__v": {
                        "type": "number",
                        "example": 3
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error trying to fetch the playlist. CALL NAVI"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/playlist/:idsong/:idPlaylist/remove": {
      "patch": {
        "tags": [
          "Playlists"
        ],
        "summary": "Remove a song from a playlist",
        "description": "Removes a song from a playlist. Only the owner of the playlist or an administrator can perform this action. Throws an error if the song does not exist in the playlist.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer JWT token to authenticate the user"
          },
          {
            "name": "idsong",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Numeric ID of the song to be removed from the playlist"
          },
          {
            "name": "idPlaylist",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "MongoDB ObjectId of the playlist from which the song will be removed"
          }
        ],
        "responses": {
          "204": {
            "description": "Song successfully removed from playlist (no content)"
          },
          "400": {
            "description": "Invalid input or bad request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid ID format or request"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Missing or invalid authorization token",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "No token provided"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "User is not authorized to modify the playlist",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Access denied"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Playlist not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Playlist not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "Song is not in the playlist",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Song 1 is not in the playlist"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal error trying to remove song from playlist"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/playlist/:idsong/:idPlaylist:/add": {
      "patch": {
        "tags": [
          "Playlists"
        ],
        "summary": "Add a song to a playlist",
        "description": "Adds a song (by its ID) to a playlist (by its ID). Only the playlist owner or an admin is authorized to perform this action. Duplicate songs are not allowed.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer JWT token to authenticate the user"
          },
          {
            "name": "idsong",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Numeric ID of the song to be added to the playlist"
          },
          {
            "name": "idPlaylist",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "MongoDB ObjectId of the playlist to which the song will be added"
          }
        ],
        "responses": {
          "204": {
            "description": "Song successfully added to playlist (no content)"
          },
          "400": {
            "description": "Invalid ID format or other bad request error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid song or playlist ID format"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Missing or invalid authorization token",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "No token provided"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "User does not own the playlist or is not authorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Access denied"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Playlist or song not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Playlist not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "The song is already in the playlist",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Song 1 is already in the playlist"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal error trying to add song to playlist"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/playlist/:idPlaylist/delete": {
      "delete": {
        "tags": [
          "Playlists"
        ],
        "summary": "Eliminar una playlist",
        "description": "Elimina una playlist del sistema. Solo puede hacerlo el propietario o un administrador. También elimina la imagen asociada del sistema de archivos.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token JWT para autenticar al usuario"
          },
          {
            "name": "idPlaylist",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID de la playlist a eliminar"
          }
        ],
        "responses": {
          "204": {
            "description": "Playlist eliminada correctamente"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Token no proporcionado o inválido",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "No token provided"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "El usuario no tiene permisos para eliminar esta playlist",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Access denied"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "La playlist no existe o ya fue eliminada",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Playlist not found or already deleted"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Error trying to delete the playlist. CALL NAVI"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/playlists/upload": {
      "put": {
        "tags": [
          "Playlists"
        ],
        "summary": "Crear una nueva playlist con imagen",
        "description": "Permite a un usuario autenticado subir una nueva playlist con su imagen asociada. La imagen debe ser PNG o JPG. El nombre de la playlist es obligatorio. Se guarda en el servidor y se registra en la base de datos.",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Bearer token JWT para autenticar al usuario"
          },
          {
            "name": "image",
            "in": "formData",
            "type": "file",
            "required": true,
            "description": "Imagen PNG o JPG de la playlist (máx. 20MB)"
          },
          {
            "name": "playlistName",
            "in": "formData",
            "type": "string",
            "required": true,
            "description": "Nombre de la playlist"
          },
          {
            "name": "description",
            "in": "formData",
            "type": "string",
            "required": false,
            "description": "Descripción opcional de la playlist"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "playlistName": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Playlist creada correctamente",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Playlist created successfully"
                },
                "playlist": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "68267d8ec27bdad6076766f8"
                    },
                    "creator_id": {
                      "type": "number",
                      "example": 3
                    },
                    "playlist_name": {
                      "type": "string",
                      "example": "pruebas"
                    },
                    "description": {
                      "type": "string",
                      "example": "adaddadada"
                    },
                    "image_path": {
                      "type": "string",
                      "example": "6f975260-38b9-4acf-a072-c6c49377d742.png"
                    },
                    "songs": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2025-05-15T23:49:34.319Z"
                    },
                    "__v": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Falta algún campo obligatorio o archivo inválido",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "File not provided"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Token no proporcionado",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "No token provided"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Token inválido o expirado",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Invalid or expired token"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Failed to process image upload"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  }
}