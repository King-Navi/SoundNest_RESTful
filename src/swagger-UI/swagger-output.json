{
  "swagger": "2.0",
  "info": {
    "title": "SoundNest API",
    "description": "Documentación de mi API RESTful",
    "version": "1.0.0"
  },
  "host": "localhost:6969",
  "basePath": "/",
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint para login de usuario",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "123456"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/auth/sendCodeEmail": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Sends a confirmation code to the user\\'s email.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Code sent successfully"
          },
          "400": {
            "description": "Failed to send code"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/auth/verifiCode": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Verifies the confirmation code sent to the user\\'s email. Delete the code after",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "code": {
                  "type": "number",
                  "example": 123456
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Code verified successfully"
          },
          "400": {
            "description": "Invalid or expired code"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user/validateJWT": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/user/newUser": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Creates a new user. Deletes the code sent to the email after validation.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nameUser": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "Juan Pérez"
                    }
                  }
                },
                "email": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "juan@example.com"
                    }
                  }
                },
                "password": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "contraseña256"
                    }
                  }
                },
                "code": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "a1B2c3"
                    }
                  }
                },
                "additionalInformation": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "object"
                    },
                    "required": {
                      "type": "boolean",
                      "example": false
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "bio": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "example": {
                              "type": "string",
                              "example": "I love electronic music"
                            }
                          }
                        },
                        "instagram": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "example": {
                              "type": "string",
                              "example": "@juan_music"
                            }
                          }
                        },
                        "genres": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "array"
                            },
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                }
                              }
                            },
                            "example": {
                              "type": "array",
                              "example": [
                                "rock",
                                "electronic"
                              ],
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "additionalProperties": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User created successfully (no content)"
          },
          "400": {
            "description": "Invalid or missing data"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/user/editUser": {
      "patch": {
        "tags": [
          "Users"
        ],
        "description": "Edit the authenticated user. All fields are optional; only provided fields will be updated.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nameUser": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "Juan Pérez"
                    }
                  }
                },
                "email": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "juan@example.com"
                    }
                  }
                },
                "password": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    },
                    "example": {
                      "type": "string",
                      "example": "newPassword123"
                    }
                  }
                },
                "additionalInformation": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "object"
                    },
                    "additionalProperties": {
                      "type": "boolean",
                      "example": true
                    },
                    "example": {
                      "type": "object",
                      "properties": {
                        "bio": {
                          "type": "string",
                          "example": "I love electronic music"
                        },
                        "instagram": {
                          "type": "string",
                          "example": "@juan_music"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Invalid or missing fields"
          },
          "401": {
            "description": "Unauthorized, no token provided"
          },
          "403": {
            "description": "Invalid or expired token"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/comment/{commentId}/respondComment": {
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Responder a un comentario existente",
        "description": "",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID del comentario al que se desea responder",
            "example": 5
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Contenido de la respuesta al comentario",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Estoy de acuerdo contigo"
                        }
                      }
                    }
                  }
                },
                "required": {
                  "type": "array",
                  "example": [
                    "message"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Respuesta agregada exitosamente al comentario"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Comentario no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/comment/createComment": {
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Crear un comentario",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Cuerpo del comentario",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "song_id": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "integer"
                        },
                        "example": {
                          "type": "number",
                          "example": 123
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "any"
                        }
                      }
                    }
                  }
                },
                "required": {
                  "type": "array",
                  "example": [
                    "song_id",
                    "message"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Comentario creado exitosamente"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Nonexistent song"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/comment/getComment/:song_id/comments": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Obtener comentarios por ID de canción",
        "description": "",
        "parameters": [
          {
            "name": "song_id",
            "in": "path",
            "description": "ID de la canción (ej: 1231231)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de comentarios",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "681f473536ee5347ec38543c"
                  },
                  "song_id": {
                    "type": "number",
                    "example": 213
                  },
                  "user": {
                    "type": "string",
                    "example": "Pepe"
                  },
                  "message": {
                    "type": "string",
                    "example": "Prueba"
                  },
                  "parent_id": {},
                  "timestamp": {
                    "type": "string",
                    "example": "2025-05-10T12:31:49.254Z"
                  },
                  "responses": {
                    "type": "array",
                    "example": [],
                    "items": {}
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "No se encontraron comentarios"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/comment/getComment/comment/:id": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Obtener comentario por ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del comentario (ej: 681457a757562da3002c02d6)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalle del comentario",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "681f473536ee5347ec38543c"
                },
                "song_id": {
                  "type": "number",
                  "example": 213
                },
                "user": {
                  "type": "string",
                  "example": "Pepe"
                },
                "message": {
                  "type": "string",
                  "example": "Prueba"
                },
                "parent_id": {},
                "timestamp": {
                  "type": "string",
                  "example": "2025-05-10T12:31:49.254Z"
                },
                "responses": {
                  "type": "array",
                  "example": [],
                  "items": {}
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Comentario no encontrado"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/comment/delete/{id}": {
      "delete": {
        "tags": [
          "Comments"
        ],
        "summary": "Eliminar comentario por ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID del comentario (ej: 681457a757562da3002c02d6)"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Comentario eliminado exitosamente"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Lack of permissions"
          },
          "500": {
            "description": "Error del servidor"
          }
        }
      }
    },
    "/api/notifications/createNotification": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Crear una notificación",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Cuerpo de la solicitud",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Title"
                        }
                      }
                    },
                    "sender": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "admin"
                        }
                      }
                    },
                    "user_id": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "integer"
                        },
                        "example": {
                          "type": "number",
                          "example": 101
                        }
                      }
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "john"
                        }
                      }
                    },
                    "notification": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Tienes un nuevo mensaje en tu bandeja de entrada."
                        }
                      }
                    },
                    "relevance": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "low",
                            "medium",
                            "high"
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "type": "string",
                          "example": "medium"
                        }
                      }
                    }
                  }
                },
                "required": {
                  "type": "array",
                  "example": [
                    "title",
                    "sender",
                    "user_id",
                    "user",
                    "notification",
                    "relevance"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      }
    },
    "/api/notifications/:id/notification": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Obtener notificación por ID",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID de la notificación (ej: 6814750fc209c9e3eb9bcd5b)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalle de la notificación",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "example": "6821618d4f26dc92ccb426ff"
                },
                "title": {
                  "type": "string",
                  "example": "asdasd"
                },
                "sender": {
                  "type": "string",
                  "example": "fulanito23232"
                },
                "user_id": {
                  "type": "number",
                  "example": 1
                },
                "user": {
                  "type": "string",
                  "example": "u"
                },
                "notification": {
                  "type": "string",
                  "example": "high"
                },
                "relevance": {
                  "type": "string",
                  "example": "high"
                },
                "read": {
                  "type": "boolean",
                  "example": false
                },
                "createdAt": {
                  "type": "string",
                  "example": "2025-05-12T02:48:45.459Z"
                },
                "__v": {
                  "type": "number",
                  "example": 0
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Notificación no encontrada"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/notifications/getNotifications/:userId": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Obtener todas las notificaciones de un usuario",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID del usuario (ej: 101)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de notificaciones del usuario",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "6821618d4f26dc92ccb426ff"
                  },
                  "title": {
                    "type": "string",
                    "example": "asdasd"
                  },
                  "sender": {
                    "type": "string",
                    "example": "fulanito23232"
                  },
                  "user_id": {
                    "type": "number",
                    "example": 1
                  },
                  "user": {
                    "type": "string",
                    "example": "u"
                  },
                  "notification": {
                    "type": "string",
                    "example": "high"
                  },
                  "relevance": {
                    "type": "string",
                    "example": "high"
                  },
                  "read": {
                    "type": "boolean",
                    "example": false
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "2025-05-12T02:48:45.459Z"
                  },
                  "__v": {
                    "type": "number",
                    "example": 0
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Error en la solicitud"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/notifications/delete/:id": {
      "delete": {
        "tags": [
          "Notifications"
        ],
        "summary": "Eliminar notificación por ID",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID de la notificación (ej: 681471c0914598e2e39a7adb)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Notificación eliminada"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Notificación no encontrada"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/notifications/notification/:id/read": {
      "patch": {
        "tags": [
          "Notifications"
        ],
        "summary": "Marcar notificación como leída",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID de la notificación (ej: 6814750fc209c9e3eb9bcd5b)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Notificación marcada como leída"
          },
          "400": {
            "description": "Formato de ID inválido"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Notificación no encontrada"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/songs/:amount/popular/:year/:month": {
      "get": {
        "tags": [
          "Songs"
        ],
        "summary": "Get most popular songs by month",
        "description": "Retrieves detailed information about the top songs in a given month and year, ordered by total playCount.",
        "parameters": [
          {
            "name": "amount",
            "in": "path",
            "description": "Number of songs to retrieve (max 60)",
            "required": true,
            "type": "integer"
          },
          {
            "name": "year",
            "in": "path",
            "description": "Four-digit year (e.g. 2025)",
            "required": true,
            "type": "integer"
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month number (1-12)",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "List of most popular songs returned successfully.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "idSong": {
                    "type": "number",
                    "example": 1
                  },
                  "songName": {
                    "type": "string",
                    "example": "Canción de Prueba"
                  },
                  "fileName": {
                    "type": "string",
                    "example": "cancion_prueba.mp3"
                  },
                  "durationSeconds": {
                    "type": "number",
                    "example": 180
                  },
                  "releaseDate": {
                    "type": "string",
                    "example": "2025-05-14T00:15:46.000Z"
                  },
                  "isDeleted": {
                    "type": "boolean",
                    "example": false
                  },
                  "idSongGenre": {
                    "type": "number",
                    "example": 1
                  },
                  "idSongExtension": {
                    "type": "number",
                    "example": 1
                  },
                  "userName": {
                    "type": "string",
                    "example": "juanito"
                  },
                  "description": {
                    "type": "string",
                    "example": "Example of descriptions"
                  },
                  "pathImageUrl": {
                    "type": "string",
                    "example": "protocol://host/route/file.extension"
                  },
                  "visualizations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "idVisualizations": {
                          "type": "number",
                          "example": 2
                        },
                        "playCount": {
                          "type": "number",
                          "example": 15
                        },
                        "period": {
                          "type": "string",
                          "example": "2025-05-12"
                        },
                        "idSong": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid or missing parameter",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid or missing 'amount'/'year'/'month' parameter"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "No popular songs found for the specified period",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Songs not found"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Failed to fetch popular songs: <message>"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/songs/:amount/recent": {
      "get": {
        "tags": [
          "Songs"
        ],
        "summary": "Get detailed information about recent songs (7 days ago max)",
        "description": "Retrieves detailed information about songs of 7 days old max, including metadata, artist name, and visualization history.",
        "parameters": [
          {
            "name": "amount",
            "in": "path",
            "description": "amount of the songs to retrieve",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Songs found and returned successfully.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "idSong": {
                    "type": "number",
                    "example": 1
                  },
                  "songName": {
                    "type": "string",
                    "example": "Canción de Prueba"
                  },
                  "fileName": {
                    "type": "string",
                    "example": "cancion_prueba.mp3"
                  },
                  "durationSeconds": {
                    "type": "number",
                    "example": 180
                  },
                  "releaseDate": {
                    "type": "string",
                    "example": "2025-05-14T00:15:46.000Z"
                  },
                  "isDeleted": {
                    "type": "boolean",
                    "example": false
                  },
                  "idSongGenre": {
                    "type": "number",
                    "example": 1
                  },
                  "idSongExtension": {
                    "type": "number",
                    "example": 1
                  },
                  "userName": {
                    "type": "string",
                    "example": "juanito"
                  },
                  "description": {
                    "type": "string",
                    "example": "Example of descriptions"
                  },
                  "pathImageUrl": {
                    "type": "string",
                    "example": "protocol://host/rute/file.extension"
                  },
                  "visualizations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "idVisualizations": {
                          "type": "number",
                          "example": 2
                        },
                        "playCount": {
                          "type": "number",
                          "example": 15
                        },
                        "period": {
                          "type": "string",
                          "example": "2025-05-12"
                        },
                        "idSong": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "error": "Invalid or missing amount"
          },
          "404": {
            "error": "Songs not found",
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/songs/:amount/random": {
      "get": {
        "tags": [
          "Songs"
        ],
        "summary": "Get detailed information about random songs",
        "description": "Retrieves detailed information for random songs, including metadata, artist name, and visualization history.",
        "parameters": [
          {
            "name": "amount",
            "in": "path",
            "description": "amount of the songs to retrieve",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Songs found and returned successfully.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "idSong": {
                    "type": "number",
                    "example": 1
                  },
                  "songName": {
                    "type": "string",
                    "example": "Canción de Prueba"
                  },
                  "fileName": {
                    "type": "string",
                    "example": "cancion_prueba.mp3"
                  },
                  "durationSeconds": {
                    "type": "number",
                    "example": 180
                  },
                  "releaseDate": {
                    "type": "string",
                    "example": "2025-05-14T00:15:46.000Z"
                  },
                  "isDeleted": {
                    "type": "boolean",
                    "example": false
                  },
                  "idSongGenre": {
                    "type": "number",
                    "example": 1
                  },
                  "idSongExtension": {
                    "type": "number",
                    "example": 1
                  },
                  "userName": {
                    "type": "string",
                    "example": "juanito"
                  },
                  "description": {
                    "type": "string",
                    "example": "Example of descriptions"
                  },
                  "pathImageUrl": {
                    "type": "string",
                    "example": "protocol://host/rute/file.extension"
                  },
                  "visualizations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "idVisualizations": {
                          "type": "number",
                          "example": 2
                        },
                        "playCount": {
                          "type": "number",
                          "example": 15
                        },
                        "period": {
                          "type": "string",
                          "example": "2025-05-12"
                        },
                        "idSong": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "error": "Invalid or missing amount"
          },
          "404": {
            "description": "Not Found",
            "error": "Songs not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/songs/:idsong/song": {
      "get": {
        "tags": [
          "Songs"
        ],
        "summary": "Get detailed information about a song",
        "description": "Retrieves detailed information for a specific song, including metadata, artist name, and visualization history.",
        "parameters": [
          {
            "name": "idsong",
            "in": "path",
            "description": "ID of the song to retrieve",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Song found and returned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "idSong": {
                  "type": "number",
                  "example": 1
                },
                "songName": {
                  "type": "string",
                  "example": "Canción de Prueba"
                },
                "fileName": {
                  "type": "string",
                  "example": "cancion_prueba.mp3"
                },
                "durationSeconds": {
                  "type": "number",
                  "example": 180
                },
                "releaseDate": {
                  "type": "string",
                  "example": "2025-05-14T00:15:46.000Z"
                },
                "isDeleted": {
                  "type": "boolean",
                  "example": false
                },
                "idSongGenre": {
                  "type": "number",
                  "example": 1
                },
                "idSongExtension": {
                  "type": "number",
                  "example": 1
                },
                "userName": {
                  "type": "string",
                  "example": "juanito"
                },
                "description": {
                  "type": "string",
                  "example": "Example of descriptions"
                },
                "pathImageUrl": {
                  "type": "string",
                  "example": "protocol://host/rute/file.extension"
                },
                "visualizations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "idVisualizations": {
                        "type": "number",
                        "example": 2
                      },
                      "playCount": {
                        "type": "number",
                        "example": 15
                      },
                      "period": {
                        "type": "string",
                        "example": "2025-05-12"
                      },
                      "idSong": {
                        "type": "number",
                        "example": 1
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Song not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/songs/genres": {
      "get": {
        "tags": [
          "Songs"
        ],
        "description": "Retrieves all available music genres.",
        "responses": {
          "200": {
            "description": "List of music genres",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "idSongGenre": {
                    "type": "number",
                    "example": 4
                  },
                  "genreName": {
                    "type": "string",
                    "example": "Blues"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/songs/extensions": {
      "get": {
        "tags": [
          "Songs"
        ],
        "summary": "Get all song file extensions",
        "description": "Returns a list of available file extensions with their IDs.",
        "responses": {
          "200": {
            "description": "Successful response - list of extensions",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "idSongExtension": {
                    "type": "number",
                    "example": 2
                  },
                  "extensionName": {
                    "type": "string",
                    "example": "wav"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Server error while fetching extensions"
          }
        }
      }
    }
  }
}